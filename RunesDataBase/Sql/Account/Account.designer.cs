#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RunesDataBase.Sql.Account
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ROM_Account")]
	public partial class AccountDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertPlayerAccount(PlayerAccount instance);
    partial void UpdatePlayerAccount(PlayerAccount instance);
    partial void DeletePlayerAccount(PlayerAccount instance);
    #endregion
		
		public AccountDataContext() : 
				base(global::RunesDataBase.Properties.Settings.Default.ROM_AccountConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AccountDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PlayerAccount> PlayerAccount
		{
			get
			{
				return this.GetTable<PlayerAccount>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlayerAccount")]
	public partial class PlayerAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Account_ID;
		
		private string _Password;
		
		private bool _IsMd5Password;
		
		private bool _IsAutoConvertMd5;
		
		private int _ChargType;
		
		private int _Point;
		
		private int _AccountState;
		
		private int _FreezeType;
		
		private int _GameID;
		
		private int _LastLoginGameID;
		
		private string _AccountType;
		
		private System.DateTime _CreateTime;
		
		private int _PlayTimeQuota;
		
		private System.DateTime _LastLoginTime;
		
		private int _LastLogoutTime;
		
		private bool _IsInfant;
		
		private int _PlayTime;
		
		private System.DateTime _FirstLoginTime;
		
		private System.DateTime _ValidTime;
		
		private int _UserState;
		
		private int _Col1;
		
		private int _Col2;
		
		private int _Col3;
		
		private System.DateTime _Age;
		
		private System.DateTime _VivoxLicenseTime;
		
		private bool _ResetPassword;
		
		private System.DateTime _FreezeUntil;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccount_IDChanging(string value);
    partial void OnAccount_IDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsMd5PasswordChanging(bool value);
    partial void OnIsMd5PasswordChanged();
    partial void OnIsAutoConvertMd5Changing(bool value);
    partial void OnIsAutoConvertMd5Changed();
    partial void OnChargTypeChanging(int value);
    partial void OnChargTypeChanged();
    partial void OnPointChanging(int value);
    partial void OnPointChanged();
    partial void OnAccountStateChanging(int value);
    partial void OnAccountStateChanged();
    partial void OnFreezeTypeChanging(int value);
    partial void OnFreezeTypeChanged();
    partial void OnGameIDChanging(int value);
    partial void OnGameIDChanged();
    partial void OnLastLoginGameIDChanging(int value);
    partial void OnLastLoginGameIDChanged();
    partial void OnAccountTypeChanging(string value);
    partial void OnAccountTypeChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnPlayTimeQuotaChanging(int value);
    partial void OnPlayTimeQuotaChanged();
    partial void OnLastLoginTimeChanging(System.DateTime value);
    partial void OnLastLoginTimeChanged();
    partial void OnLastLogoutTimeChanging(int value);
    partial void OnLastLogoutTimeChanged();
    partial void OnIsInfantChanging(bool value);
    partial void OnIsInfantChanged();
    partial void OnPlayTimeChanging(int value);
    partial void OnPlayTimeChanged();
    partial void OnFirstLoginTimeChanging(System.DateTime value);
    partial void OnFirstLoginTimeChanged();
    partial void OnValidTimeChanging(System.DateTime value);
    partial void OnValidTimeChanged();
    partial void OnUserStateChanging(int value);
    partial void OnUserStateChanged();
    partial void OnCol1Changing(int value);
    partial void OnCol1Changed();
    partial void OnCol2Changing(int value);
    partial void OnCol2Changed();
    partial void OnCol3Changing(int value);
    partial void OnCol3Changed();
    partial void OnAgeChanging(System.DateTime value);
    partial void OnAgeChanged();
    partial void OnVivoxLicenseTimeChanging(System.DateTime value);
    partial void OnVivoxLicenseTimeChanged();
    partial void OnResetPasswordChanging(bool value);
    partial void OnResetPasswordChanged();
    partial void OnFreezeUntilChanging(System.DateTime value);
    partial void OnFreezeUntilChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public PlayerAccount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_ID", DbType="VarChar(63) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Account_ID
		{
			get
			{
				return this._Account_ID;
			}
			set
			{
				if ((this._Account_ID != value))
				{
					this.OnAccount_IDChanging(value);
					this.SendPropertyChanging();
					this._Account_ID = value;
					this.SendPropertyChanged("Account_ID");
					this.OnAccount_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMd5Password", DbType="Bit NOT NULL")]
		public bool IsMd5Password
		{
			get
			{
				return this._IsMd5Password;
			}
			set
			{
				if ((this._IsMd5Password != value))
				{
					this.OnIsMd5PasswordChanging(value);
					this.SendPropertyChanging();
					this._IsMd5Password = value;
					this.SendPropertyChanged("IsMd5Password");
					this.OnIsMd5PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAutoConvertMd5", DbType="Bit NOT NULL")]
		public bool IsAutoConvertMd5
		{
			get
			{
				return this._IsAutoConvertMd5;
			}
			set
			{
				if ((this._IsAutoConvertMd5 != value))
				{
					this.OnIsAutoConvertMd5Changing(value);
					this.SendPropertyChanging();
					this._IsAutoConvertMd5 = value;
					this.SendPropertyChanged("IsAutoConvertMd5");
					this.OnIsAutoConvertMd5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargType", DbType="Int NOT NULL")]
		public int ChargType
		{
			get
			{
				return this._ChargType;
			}
			set
			{
				if ((this._ChargType != value))
				{
					this.OnChargTypeChanging(value);
					this.SendPropertyChanging();
					this._ChargType = value;
					this.SendPropertyChanged("ChargType");
					this.OnChargTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point", DbType="Int NOT NULL")]
		public int Point
		{
			get
			{
				return this._Point;
			}
			set
			{
				if ((this._Point != value))
				{
					this.OnPointChanging(value);
					this.SendPropertyChanging();
					this._Point = value;
					this.SendPropertyChanged("Point");
					this.OnPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountState", DbType="Int NOT NULL")]
		public int AccountState
		{
			get
			{
				return this._AccountState;
			}
			set
			{
				if ((this._AccountState != value))
				{
					this.OnAccountStateChanging(value);
					this.SendPropertyChanging();
					this._AccountState = value;
					this.SendPropertyChanged("AccountState");
					this.OnAccountStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreezeType", DbType="Int NOT NULL")]
		public int FreezeType
		{
			get
			{
				return this._FreezeType;
			}
			set
			{
				if ((this._FreezeType != value))
				{
					this.OnFreezeTypeChanging(value);
					this.SendPropertyChanging();
					this._FreezeType = value;
					this.SendPropertyChanged("FreezeType");
					this.OnFreezeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameID", DbType="Int NOT NULL")]
		public int GameID
		{
			get
			{
				return this._GameID;
			}
			set
			{
				if ((this._GameID != value))
				{
					this.OnGameIDChanging(value);
					this.SendPropertyChanging();
					this._GameID = value;
					this.SendPropertyChanged("GameID");
					this.OnGameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginGameID", DbType="Int NOT NULL")]
		public int LastLoginGameID
		{
			get
			{
				return this._LastLoginGameID;
			}
			set
			{
				if ((this._LastLoginGameID != value))
				{
					this.OnLastLoginGameIDChanging(value);
					this.SendPropertyChanging();
					this._LastLoginGameID = value;
					this.SendPropertyChanged("LastLoginGameID");
					this.OnLastLoginGameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="SmallDateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayTimeQuota", DbType="Int NOT NULL")]
		public int PlayTimeQuota
		{
			get
			{
				return this._PlayTimeQuota;
			}
			set
			{
				if ((this._PlayTimeQuota != value))
				{
					this.OnPlayTimeQuotaChanging(value);
					this.SendPropertyChanging();
					this._PlayTimeQuota = value;
					this.SendPropertyChanged("PlayTimeQuota");
					this.OnPlayTimeQuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginTime", DbType="SmallDateTime NOT NULL")]
		public System.DateTime LastLoginTime
		{
			get
			{
				return this._LastLoginTime;
			}
			set
			{
				if ((this._LastLoginTime != value))
				{
					this.OnLastLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._LastLoginTime = value;
					this.SendPropertyChanged("LastLoginTime");
					this.OnLastLoginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogoutTime", DbType="Int NOT NULL")]
		public int LastLogoutTime
		{
			get
			{
				return this._LastLogoutTime;
			}
			set
			{
				if ((this._LastLogoutTime != value))
				{
					this.OnLastLogoutTimeChanging(value);
					this.SendPropertyChanging();
					this._LastLogoutTime = value;
					this.SendPropertyChanged("LastLogoutTime");
					this.OnLastLogoutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInfant", DbType="Bit NOT NULL")]
		public bool IsInfant
		{
			get
			{
				return this._IsInfant;
			}
			set
			{
				if ((this._IsInfant != value))
				{
					this.OnIsInfantChanging(value);
					this.SendPropertyChanging();
					this._IsInfant = value;
					this.SendPropertyChanged("IsInfant");
					this.OnIsInfantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayTime", DbType="Int NOT NULL")]
		public int PlayTime
		{
			get
			{
				return this._PlayTime;
			}
			set
			{
				if ((this._PlayTime != value))
				{
					this.OnPlayTimeChanging(value);
					this.SendPropertyChanging();
					this._PlayTime = value;
					this.SendPropertyChanged("PlayTime");
					this.OnPlayTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstLoginTime", DbType="SmallDateTime NOT NULL")]
		public System.DateTime FirstLoginTime
		{
			get
			{
				return this._FirstLoginTime;
			}
			set
			{
				if ((this._FirstLoginTime != value))
				{
					this.OnFirstLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._FirstLoginTime = value;
					this.SendPropertyChanged("FirstLoginTime");
					this.OnFirstLoginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidTime", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ValidTime
		{
			get
			{
				return this._ValidTime;
			}
			set
			{
				if ((this._ValidTime != value))
				{
					this.OnValidTimeChanging(value);
					this.SendPropertyChanging();
					this._ValidTime = value;
					this.SendPropertyChanged("ValidTime");
					this.OnValidTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserState", DbType="Int NOT NULL")]
		public int UserState
		{
			get
			{
				return this._UserState;
			}
			set
			{
				if ((this._UserState != value))
				{
					this.OnUserStateChanging(value);
					this.SendPropertyChanging();
					this._UserState = value;
					this.SendPropertyChanged("UserState");
					this.OnUserStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Col1", DbType="Int NOT NULL")]
		public int Col1
		{
			get
			{
				return this._Col1;
			}
			set
			{
				if ((this._Col1 != value))
				{
					this.OnCol1Changing(value);
					this.SendPropertyChanging();
					this._Col1 = value;
					this.SendPropertyChanged("Col1");
					this.OnCol1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Col2", DbType="Int NOT NULL")]
		public int Col2
		{
			get
			{
				return this._Col2;
			}
			set
			{
				if ((this._Col2 != value))
				{
					this.OnCol2Changing(value);
					this.SendPropertyChanging();
					this._Col2 = value;
					this.SendPropertyChanged("Col2");
					this.OnCol2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Col3", DbType="Int NOT NULL")]
		public int Col3
		{
			get
			{
				return this._Col3;
			}
			set
			{
				if ((this._Col3 != value))
				{
					this.OnCol3Changing(value);
					this.SendPropertyChanging();
					this._Col3 = value;
					this.SendPropertyChanged("Col3");
					this.OnCol3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VivoxLicenseTime", DbType="SmallDateTime NOT NULL")]
		public System.DateTime VivoxLicenseTime
		{
			get
			{
				return this._VivoxLicenseTime;
			}
			set
			{
				if ((this._VivoxLicenseTime != value))
				{
					this.OnVivoxLicenseTimeChanging(value);
					this.SendPropertyChanging();
					this._VivoxLicenseTime = value;
					this.SendPropertyChanged("VivoxLicenseTime");
					this.OnVivoxLicenseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResetPassword", DbType="Bit NOT NULL")]
		public bool ResetPassword
		{
			get
			{
				return this._ResetPassword;
			}
			set
			{
				if ((this._ResetPassword != value))
				{
					this.OnResetPasswordChanging(value);
					this.SendPropertyChanging();
					this._ResetPassword = value;
					this.SendPropertyChanged("ResetPassword");
					this.OnResetPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreezeUntil", DbType="SmallDateTime NOT NULL")]
		public System.DateTime FreezeUntil
		{
			get
			{
				return this._FreezeUntil;
			}
			set
			{
				if ((this._FreezeUntil != value))
				{
					this.OnFreezeUntilChanging(value);
					this.SendPropertyChanging();
					this._FreezeUntil = value;
					this.SendPropertyChanged("FreezeUntil");
					this.OnFreezeUntilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
